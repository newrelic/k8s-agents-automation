name: Trigger pre-release shared workflow

#  Usage from the caller workflow:
#
#  jobs:
#    "job-name":
#      uses: newrelic/k8s-agents-automation/.github/workflows/trigger_prerelease.yaml@v1
#      with:
#        bot_token: {{ secret."github_token_name" }}
#        slack_channel: {{ secret."slack_channel_name" }}
#        slack_token: {{ secret."slack_token_name" }}

on:
  workflow_call:
    inputs:
      block_endpoint:
        description: This endpoint should respond status 200 for the pre-release to continue.
        required: false
        type: string
        default: https://newrelic.github.io/k8s-agents-automation/automatic_release_enable
      bot_name:
        description: "github bot name to sign commits"
        required: false
        type: string
        default: newrelic-coreint-bot
      bot_email:
        description: "github bot email to sign commits"
        required: false
        type: string
        default: coreint-dev@newrelic.com
      rt-excluded-dirs:
        description: Release-toolkit excluded-dirs field.
        required: false
        type: string
        default: ""
      rt-excluded-files:
        description: Release-toolkit excluded-files field.
        required: false
        type: string
        default: ""
      rt-included-dirs:
        description: Release-toolkit included-dirs field.
        required: false
        type: string
        default: ""
      rt-included-files:
        description: Release-toolkit included-files field.
        required: false
        type: string
        default: ""
    secrets:
      bot_token:
        description: "github token"
        required: true
      slack_channel:
        description: "slack channel for sending a message in case of failure"
        required: true
      slack_token:
        description: "slack token for sending the message"
        required: true

jobs:
  check_block_endpoint:
    name: Check block endpoint
    runs-on: ubuntu-latest
    steps:
      - name: Check block endpoint
        run: |
          http_status=$(curl -s -o /dev/null -w "%{http_code}" "${{ inputs.block_endpoint }}")

          if [ "$http_status" != 200 ]; then
            echo "Fail checking release block endpoint: ${{ inputs.block_endpoint }}"
            exit 1
          fi
  prerelease:
    needs: check_block_endpoint
    name: Create prerelease
    runs-on: ubuntu-latest
    steps:
      - name: Check is triggered for default branch
        run: |
          if [ ${GITHUB_REF_NAME} != ${{ github.event.repository.default_branch }} ] || [ ${GITHUB_REF_TYPE} != "branch" ];then
            echo This workflow should only be triggered for the '${{ github.event.repository.default_branch }}' branch
            exit 1
          fi
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.repository.default_branch }}
          token: "${{ secrets.bot_token }}"
      - uses: newrelic/release-toolkit/contrib/ohi-release-notes@v1
        id: release-data
        with:
          excluded-dirs: "${{ inputs.rt-excluded-dirs }}"
          excluded-files: "${{ inputs.rt-excluded-files }}"
          included-dirs: "${{ inputs.rt-included-dirs }}"
          included-files: "${{ inputs.rt-included-files }}"
      - name: Configure Git
        if: ${{ steps.release-data.outputs.skip-release != 'true' }}
        run: |
          git config user.name '${{ inputs.bot_name }}'
          git config user.email '${{ inputs.bot_email }}'
      - name: Commit updated changelog
        if: ${{ steps.release-data.outputs.skip-release != 'true' }}
        run: |
          git add CHANGELOG.md
          git commit -m "Update changelog with changes from ${{ steps.release-data.outputs.next-version }}"
          git push -u origin ${{ github.event.repository.default_branch }}
      - name: Create prerelease
        if: ${{ steps.release-data.outputs.skip-release != 'true' }}
        env:
          GH_TOKEN: "${{ secrets.bot_token }}"
        run: |
          gh release create ${{ steps.release-data.outputs.next-version }} --title ${{ steps.release-data.outputs.next-version }}  --target $(git rev-parse HEAD) --notes-file CHANGELOG.partial.md --prerelease
      - name: Notify failure via Slack
        if: ${{ failure() }}
        uses: archive/github-actions-slack@master
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack_token }}
          slack-channel: ${{ secrets.slack_channel }}
          slack-text: "‚ùå `${{ github.event.repository.full_name }}`: [prerelease trigger failed](${{ github.server_url }}/${{ github.event.repository.full_name }}/actions/runs/${{ github.run_id }})"
